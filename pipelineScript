pipeline {
    agent any
    stages {
        stage('Building Artifact') {
            steps {
                // Use 'tool' to specify the Maven tool configuration
                withMaven(
                    // Provide the name of the Maven tool configuration defined in Jenkins
                    maven: 'MAVEN_HOME',
                   
                ) {
                    sh "mvn clean install package -DskipTests -Dmaven.javadoc.skip=true"
                }
            }
        }
        stage('Code Quality Analysis') {
            steps {
                // Define the SonarQube server configuration in Jenkins
                withSonarQubeEnv('SonarServer') {
                    withMaven(
                        maven: 'MAVEN_HOME',
                       
                    ) {
                        sh "mvn sonar:sonar"
                    }
                }
            }
        }
        stage("Quality Gate") {
            steps {
                script {
                    timeout(time: 1, unit: 'HOURS') {
                        // Use 'waitForQualityGate' to wait for the SonarQube analysis result
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
            post {
                always {
                    echo 'Quality Gate Passed'
                }
            }
        }
    }
}
